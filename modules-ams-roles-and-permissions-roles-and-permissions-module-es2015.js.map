{"version":3,"sources":["./src/app/modules/ams/roles-and-permissions/add-role/add-role.component.html","./src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.html","./src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.html","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.html","./src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.html","./src/app/modules/ams/roles-and-permissions/add-role/add-role.component.scss","./src/app/modules/ams/roles-and-permissions/add-role/add-role.component.ts","./src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.scss","./src/app/modules/ams/roles-and-permissions/configure-roles/configure-roles.component.ts","./src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.scss","./src/app/modules/ams/roles-and-permissions/role-type-list/role-type-list.component.ts","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.scss","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-list/roles-and-permissions-list.component.ts","./src/app/modules/ams/roles-and-permissions/roles-and-permissions-routing.module.ts","./src/app/modules/ams/roles-and-permissions/roles-and-permissions.module.ts","./src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.scss","./src/app/modules/ams/roles-and-permissions/set-permissions/set-permissions.component.ts"],"names":[],"mappings":"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","file":"modules-ams-roles-and-permissions-roles-and-permissions-module-es2015.js","sourcesContent":["export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #createParkingSlotForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4>Create Roles</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"roleTypeId\\\" [(ngModel)]=\\\"roleTypeId\\\" class=\\\"form-control\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of allRoles\\\" value=\\\"{{item.value}}\\\">{{item?.name}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roleName\\\" [(ngModel)]=\\\"roleName\\\" required>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/roles-type-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button> -->\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<form #createParkingSlotForm=\\\"ngForm\\\" name=\\\"addSlotForm\\\" novalidate>\\n\\t\\t\\t<condo-card>\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h4>Create Roles</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<div class=\\\"p-5\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Type</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select name=\\\"roleTypeId\\\" [(ngModel)]=\\\"roleTypeId\\\" class=\\\"form-control\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of allRoles\\\" value=\\\"{{item.value}}\\\">{{item?.name}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Roles Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"roleName\\\" [(ngModel)]=\\\"roleName\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"select-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Description</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<textarea name=\\\"description\\\" [(ngModel)]=\\\"description\\\" cols=\\\"10\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\trows=\\\"3\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-12 d-flex justify-content-end\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"mr-3\\\" mat-flat-button\\n\\t\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-permissions-list\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Cancel</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"addRole()\\\">Submit</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" *ngIf=\\\"!isCreate\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"updateRole()\\\">Update</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</condo-card>\\n\\t\\t</form>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<app-loader *ngIf=\\\"!isShowRoleList\\\"></app-loader>\\n\\t\\t<condo-card *ngIf=\\\"isShowRoleList\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t<h4>Roles And Permissions</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"roleTypeSearch\\\"\\n\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"onGlSearchFilter()\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/role-type\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Create Role</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleTypeList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-aa-unit-to-unit-allocation-wrapper\\\">\\n\\t<div class=\\\"main\\\">\\n\\t\\t<app-loader *ngIf=\\\"!isShowRoleList\\\"></app-loader>\\n\\t\\t<condo-card *ngIf=\\\"isShowRoleList\\\">\\n\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex align-items-center\\\">\\n\\t\\t\\t\\t\\t\\t<h4>Roles And Permissions</h4>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"roleSearch\\\"\\n\\t\\t\\t\\t\\t\\t(ngModelChange)=\\\"onGlSearchFilter()\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"mr-3\\\">\\n\\t\\t\\t\\t\\t\\t<button mat-flat-button [color]=\\\"'primary'\\\" href=\\\"javascript:void(0)\\\"\\n\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/ams/roles-permissions/configure-roles\\\" routerLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions]=\\\"{exact:true}\\\">Role Type Config</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t<jqxGrid [theme]=\\\"'material'\\\" [width]=\\\"'100%'\\\" [rowsheight]=\\\"48\\\" [autoheight]=\\\"true\\\" [pageable]=\\\"true\\\"\\n\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" [sortable]=\\\"true\\\" [source]=\\\"roleList\\\" [columns]=\\\"roleHeader\\\"\\n\\t\\t\\t\\t\\t[columnsresize]=\\\"true\\\" [enablehover]=\\\"false\\\" #datagrid>\\n\\t\\t\\t\\t</jqxGrid>\\n\\t\\t\\t</div>\\n\\t\\t</condo-card>\\n\\t</div>\\n</div>\";","export default \"<div class=\\\"parking-create-parking-slot-wrapper\\\">\\n    <div class=\\\"main\\\">\\n        <condo-card>\\n            <div CondoCardHeader>\\n                <div class=\\\"d-flex\\\">\\n                    <div>\\n                        <h4>Set Permissions</h4>\\n                    </div>\\n                    <div class=\\\"ml-auto d-none d-md-block mr-3\\\">\\n                        <button mat-flat-button \\n                        routerLink=\\\"/ams/roles-permissions/role-permissions-list\\\" \\n\\t\\t\\t\\t\\t\\trouterLinkActive=\\\"active\\\"\\n\\t\\t\\t\\t\\t\\t[routerLinkActiveOptions] = \\\"{exact:true}\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n            <div CondoCardBody>\\n                <div class=\\\"p-5\\\"> \\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #menu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of menuList;let i=index\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.menuName === selectedMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\" checked>\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.menuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\">\\n                            <mat-selection-list #submenu [multiple]=\\\"false\\\" (selectionChange)=\\\"changeSubMenu($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of subMenuList\\\" [value]=\\\"item\\\"\\n                                    [selected]=\\\"item.subMenuName === selectedSubMenuName\\\">\\n                                    <!-- <div class=\\\"form-check recur-check float-left\\\">\\n                                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"{{item}}\\\" name=\\\"{{item}}\\\">\\n                                        <label class=\\\"form-check-label tiny\\\" for=\\\"{{item}}\\\">{{item}}</label>\\n                                    </div> -->\\n                                    {{item?.subMenuName}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                        <div class=\\\"col-md-4 col-lg-4 col-sm-6 col-xs-6\\\" *ngIf=\\\"actionList && actionList.length\\\">\\n                            <mat-selection-list #menuActions (selectionChange)=\\\"changeActions($event)\\\">\\n                                <mat-list-option *ngFor=\\\"let item of actionList\\\" [selected]=\\\"item.checked\\\"\\n                                    [value]=\\\"item\\\">\\n                                    {{item?.name | uppercase}}\\n                                </mat-list-option>\\n                            </mat-selection-list>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </condo-card>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9hZGQtcm9sZS9hZGQtcm9sZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\n\n@Component({\n  selector: 'app-add-role',\n  templateUrl: './add-role.component.html',\n  styleUrls: ['./add-role.component.scss']\n})\nexport class AddRoleComponent implements OnInit {\n\n  allRoles: Array<any> = [];\n  roleTypeId: any;\n  roleName: any;\n  description: any;\n  roleId:any;\n  isCreate:boolean=true;\n  menuRole:any;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private sharedService : SharedService,\n    private screenService: ScreenService) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.roleId = this.activatedRoute.params['value'].id;\n      this.isCreate = false;\n      this.getRole();\n    }\n    this.getAllRoles();\n  }\n\n  getRole(){\n      let queryParamBase = {\n      roleId: this.roleId,\n    };\n    this.userService.getRoleByRoleId(queryParamBase).subscribe(\n      resp =>{\n        this.menuRole = resp[0];\n        this.roleTypeId = this.menuRole.roleId;\n        this.roleName = this.menuRole.roleName;\n        this.description = this.menuRole.description;\n      }\n    )\n  }\n\n  getAllRoles() {\n    this.userService.getAllRoleTypes().subscribe(\n      (resp: any) => {\n        this.allRoles = resp;\n        if (this.allRoles && this.allRoles.length) {\n          this.allRoles.filter(key => {\n            if (key.value == 2 || key.value == 4 || key.value == 5) {\n              this.allRoles.splice(this.allRoles.indexOf(key), 1);\n            }\n          })\n        }\n      }\n    )\n  }\n\n  addRole() {\n    let addRoleParam = {\n      \"roleId\": 0,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"roleName\": this.roleName,\n      \"description\": this.description,\n      \"isActive\": true,\n      \"insertedBy\": this.sessionService.userId,\n      \"insertedOn\": _moment().toISOString(),\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": \"2020-08-09T06:22:21.539Z\",\n      \"roleTypeId\": this.roleTypeId\n    }\n    let roleParam = {\n      role: addRoleParam\n    }\n    this.userService.addRole(roleParam).subscribe(\n      resp => {\n        this.sharedService.openSnackBar('Role Added Successfully','success');\n        this.roleTypeId = null;\n        this.roleName = '';\n        this.description = '';\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9jb25maWd1cmUtcm9sZXMvY29uZmlndXJlLXJvbGVzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as moment from 'moment';\nimport _moment from \"moment-timezone\";\n\n@Component({\n  selector: 'app-configure-roles',\n  templateUrl: './configure-roles.component.html',\n  styleUrls: ['./configure-roles.component.scss']\n})\nexport class ConfigureRolesComponent implements OnInit {\n\n  allRoles: Array<any> = [];\n  roleTypeId: any;\n  roleName: any;\n  description: any;\n  menuRoleSecLevelId:any;\n  isCreate:boolean=true;\n  menuRole:any;\n  constructor(private userService: UserService,\n    private router: Router,\n    private activatedRoute : ActivatedRoute,\n    private sessionService : SessionService,\n    private screenService: ScreenService) { }\n\n  ngOnInit(): void {\n    if (this.activatedRoute.params['value'].id != undefined) {\n      this.menuRoleSecLevelId = this.activatedRoute.params['value'].id;\n      this.isCreate = false;\n      this.getRole();\n    }\n    this.getAllRoles();\n  }\n\n  getRole(){\n      let queryParamBase = {\n      apartmentId: this.sessionService.apartmentId,\n      menuRoleSecLevelId: this.menuRoleSecLevelId,\n    };\n    this.screenService.getMenuRoleSecLevelbyRoleSecLevelId(queryParamBase).subscribe(\n      resp =>{\n        this.menuRole = resp[0];\n        this.roleTypeId = this.menuRole.roleId;\n        this.roleName = this.menuRole.roleName;\n      }\n    )\n  }\n\n  getAllRoles() {\n    this.userService.getAllRoleTypes().subscribe(\n      (resp: any) => {\n        this.allRoles = resp;\n        if (this.allRoles && this.allRoles.length) {\n          this.allRoles.filter(key => {\n            if (key.value == 2 || key.value == 4 || key.value == 5) {\n              this.allRoles.splice(this.allRoles.indexOf(key), 1);\n            }\n          })\n        }\n      }\n    )\n  }\n\n  addRole() {\n    let addMenuLevelParam = {\n      \"menuSecLevelId\": 0,\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"name\": this.roleName,\n      \"isActive\": true,\n      \"insertedBy\": this.sessionService.userId,\n      \"insertedOn\": _moment().toISOString(),\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n    }\n    let secLevelParam = {\n      seclevel: addMenuLevelParam\n    }\n    this.screenService.addMenuSecLevel(secLevelParam).subscribe(\n      (resp:any) => {\n        if (resp && resp.message) {\n          let addMenuRoleSecLevel = {\n            \"menuRoleSecLevelId\": 0,\n            \"apartmentId\": this.sessionService.apartmentId,\n            \"roleId\": parseInt(this.roleTypeId),\n            \"secLevelId\": resp.message,\n            \"isActive\": true,\n            \"insertedBy\": this.sessionService.userId,\n            \"insertedOn\": _moment().toISOString(),\n            \"updatedBy\": this.sessionService.userId,\n            \"updatedOn\": \"2020-08-09T06:22:21.539Z\"\n          }\n          let roleSecLevelParam = {\n            roleseclevel: addMenuRoleSecLevel\n          }\n          this.screenService.addMenuRoleSecLevel(roleSecLevelParam).subscribe(\n            resp => {\n              this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n            }\n          )\n        }\n      }\n    )\n  }\n\n  updateRole(){\n    let updataParam = {\n      \"menuSecLevelId\": this.menuRole.menuRoleSecLevelId,\n      \"apartmentId\":  this.sessionService.apartmentId,\n      \"name\": this.roleName,\n      \"isActive\": true,\n      \"insertedBy\": 0,\n      \"insertedOn\": _moment().toISOString(),\n      \"updatedBy\": this.sessionService.userId,\n      \"updatedOn\": _moment().toISOString()\n    }\n    let updateRoleParam = {\n      menuSecLevel : updataParam\n    }\n    this.screenService.updateMenuSecLevel(updateRoleParam).subscribe(\n      resp =>{\n        this.router.navigate(['/ams/roles-permissions/role-permissions-list']);\n      }\n    )\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlLXR5cGUtbGlzdC9yb2xlLXR5cGUtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { HostListener, Injector, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { UserService } from 'src/app/api/controllers/User';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\n\n@Component({\n  selector: 'app-role-type-list',\n  templateUrl: './role-type-list.component.html',\n  styleUrls: ['./role-type-list.component.scss']\n})\nexport class RoleTypeListComponent implements OnInit {\n\n  public roleHeader: Array<any> = [];\n  public roleTypeList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  roleTypeSearch='';\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let roleId = dataRecord.roleId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-role-type/' + roleId);\n  }\n  constructor(private router: Router,\n    private userService: UserService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  ngOnInit(): void {\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n      text: 'role name',\n      datafield: 'roleName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, {\n      text: 'description',\n      datafield: 'description',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, \n    {\n      text: 'action',\n      cellsalign: 'center',\n      align: 'center',\n      width: 120,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a></div>'\n      },\n      renderer: columnrenderer\n    }];\n    this.getRolePermissionList();\n  }\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      ApartmentId: this.sessionService.apartmentId\n    }\n    this.userService.getAllRoles(param).subscribe(\n      (resp: any) => {\n        let refMenuData = resp.filter(data => {\n          return data.isActive\n        });\n        let gridSourceData = {\n          localdata: refMenuData,\n          datatype: \"array\"\n\n        }\n        this.roleTypeList = new jqx.dataAdapter(gridSourceData);\n        this.isShowRoleList = true;\n        this.isEnableCreate = true;\n      }\n    )\n  }\n\n    \n  onGlSearchFilter() {\n\n    if(this.roleTypeSearch != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.roleTypeSearch;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.roleHeader.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n}\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC9yb2xlcy1hbmQtcGVybWlzc2lvbnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, ViewChild, HostListener, Injector } from '@angular/core';\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ModalService } from 'src/app/shared/services/modal.service';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-roles-and-permissions-list',\n  templateUrl: './roles-and-permissions-list.component.html',\n  styleUrls: ['./roles-and-permissions-list.component.scss']\n})\nexport class RolesAndPermissionsListComponent implements OnInit {\n\n  public roleHeader: Array<any> = [];\n  public roleList: any;\n  public isEnableCreate: boolean = true;\n  modalService: any;\n  isShowRoleList:boolean=false;\n  roleSearch='';\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n  apiSubscribe:Subscription;\n  @HostListener('window:navigateToPermission',['$event.detail'])\n  navigateToPermission(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    this.router.navigate(['/ams/roles-permissions/set-permission'],{queryParams:{ secLevelId: dataRecord.secLevelId, roleId: dataRecord.roleId}});\n  }\n  @HostListener('window:onEditRole', ['$event.detail'])\n  onEditRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId);\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId;\n    this.router.navigateByUrl('/ams/roles-permissions/edit-configure-roles/' + menuRoleSecLevelId);\n  }\n  @HostListener('window:onDeleteRole', ['$event.detail'])\n  onDeleteRole(detail) {\n    let dataRecord = this.datagrid.getrowdata(detail.rowId)\n    let menuRoleSecLevelId = dataRecord.menuRoleSecLevelId\n    this.modalService.showConfirmModal(menuRoleSecLevelId);\n  }\n  constructor(private router: Router,\n    private screenService: ScreenService,\n    private sharedService: SharedService,\n    private sessionService: SessionService,\n    private injector: Injector) {\n    this.modalService = this.injector.get(ModalService);\n  }\n\n  ngOnInit(): void {\n    var cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n    var columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n    this.roleHeader = [{\n      text: 'role name',\n      datafield: 'roleName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, {\n      text: 'menu security name',\n      datafield: 'secLevelName',\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer,\n      minwidth: 120\n    }, {\n      text: 'set permission',\n      cellsalign: 'center',\n      align: 'center',\n      width: 200,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" onClick=\"navigateToPermission(' + row + ')\" class=\"btn mat-primary\">Set Permissions</a></div>'\n      },\n      renderer: columnrenderer\n    },\n    {\n      text: 'action',\n      cellsalign: 'center',\n      align: 'center',\n      width: 120,\n      cellsrenderer: (row): string => {\n        return '<div class=\"simple-actions\"><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onEditRole(' + row + ')\"><i class=\"fa fa-pencil icon edit\" aria-hidden=\"true\"></i></a><a href=\"javascript:void(0)\" class=\"mr-2\" onClick=\"onDeleteRole(' + row + ')\"><i class=\"fa fa-trash icon delete\" aria-hidden=\"true\"></i></a></div>'\n      },\n      renderer: columnrenderer\n    }];\n    // delete item\n    this.apiSubscribe = this.sharedService.unitlistdeleteindexcast.subscribe(id => {\n\n      if (id != null) {\n\n        var params = {\n          menuRoleSecLevelId: id,\n          deleteBy: parseInt(this.sessionService.userId)\n        }\n\n        this.screenService.deleteMenuRoleSecLevel(params).subscribe((res: any) => {\n          this.getRolePermissionList();\n        }, error => {\n          console.log(error);\n        });\n\n\n      }\n\n    })\n    this.getRolePermissionList();\n  }\n  ngOnDestroy(){\n    this.apiSubscribe.unsubscribe();\n  }\n  getRolePermissionList() {\n    this.isShowRoleList = false;\n    let param = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.screenService.getAllDefaultMenuRoleSecLevelbyApartmentId(param).subscribe(\n      (resp: any) => {\n        let refMenuData = resp.filter(data => {\n          return data.isActive\n        });\n        let gridSourceData = {\n          localdata: refMenuData,\n          datatype: \"array\"\n\n        }\n        this.roleList = new jqx.dataAdapter(gridSourceData);\n        this.isShowRoleList = true;\n        this.isEnableCreate = true;\n      }\n    )\n  }\n\n  \n  onGlSearchFilter() {\n\n    if(this.roleSearch != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.roleSearch;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.roleHeader.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n}\n\nfunction navigateToPermission(row) {\n  var event = new CustomEvent('navigateToPermission', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).navigateToPermission = navigateToPermission;\n\nfunction onEditRole(row) {\n  var event = new CustomEvent('onEditRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onEditRole = onEditRole;\n\nfunction onDeleteRole(row) {\n  var event = new CustomEvent('onDeleteRole', {\n    detail: {\n      rowId: row\n    }\n  })\n  window.dispatchEvent(event);\n}\n(window as any).onDeleteRole = onDeleteRole;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { ConfigureRolesComponent } from './configure-roles/configure-roles.component';\nimport { RoleTypeListComponent } from './role-type-list/role-type-list.component';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\n\n\n\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'roles-permissions-list', pathMatch: 'full'},\n\t{ path: 'roles-permissions-list', component: RolesAndPermissionsListComponent},\n\t{ path: 'roles-type-list', component: RoleTypeListComponent},\n\t{ path: 'set-permission', component: SetPermissionsComponent},\n\t{ path: 'role-type', component: AddRoleComponent},\n\t{ path: 'edit-role-type/:id', component: AddRoleComponent},\n\t{ path: 'configure-roles', component: ConfigureRolesComponent},\n\t{ path: 'edit-configure-roles/:id', component: ConfigureRolesComponent},\n\t{ path: '**', redirectTo: 'roles-permissions-list', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RolesAndPermissionsRouting { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RolesAndPermissionsListComponent } from './roles-and-permissions-list/roles-and-permissions-list.component';\nimport { SetPermissionsComponent } from './set-permissions/set-permissions.component';\nimport { RolesAndPermissionsRouting } from './roles-and-permissions-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport {MatListModule} from '@angular/material/list';\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { AddRoleComponent } from './add-role/add-role.component';\nimport { ConfigureRolesComponent } from './configure-roles/configure-roles.component';\nimport { RoleTypeListComponent } from './role-type-list/role-type-list.component';\n\n\n\n@NgModule({\n  declarations: [RolesAndPermissionsListComponent, SetPermissionsComponent,AddRoleComponent, ConfigureRolesComponent, RoleTypeListComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatListModule,\n    CondoCardModule,\n    RolesAndPermissionsRouting\n  ]\n})\nexport class RolesAndPermissionsModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL3JvbGVzLWFuZC1wZXJtaXNzaW9ucy9zZXQtcGVybWlzc2lvbnMvc2V0LXBlcm1pc3Npb25zLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ScreenService } from 'src/app/api/controllers/Screen';\nimport { ActivatedRoute } from '@angular/router';\nimport { SessionService } from 'src/app/core/session/session.service';\n\n@Component({\n  selector: 'app-set-permissions',\n  templateUrl: './set-permissions.component.html',\n  styleUrls: ['./set-permissions.component.scss']\n})\nexport class SetPermissionsComponent implements OnInit {\n\n  public menuList: Array<any> = [];\n  public subMenuList: any;\n  public actionList: any;\n  public selectedMenuName: any;\n  public selectedSubMenuName: any;\n  public actions: any;\n  public secLevelId:any;\n  public roleId:any;\n  is\n  constructor(private screenService: ScreenService,private activatedRoute: ActivatedRoute,private sessionService : SessionService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.secLevelId = params['secLevelId'];\n      this.roleId = params['roleId'];\n      this.getScreenList();\n    });\n    this.actionList = [\n      {\n        name: 'add',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'edit',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'display',\n        functionId: 0,\n        checked: false\n      },\n      {\n        name: 'delete',\n        functionId: 0,\n        checked: false\n      }\n    ]\n  }\n\n  getScreenList() {\n    let queryParamBase = {\n      ApartmentId: this.sessionService.apartmentId,\n      RoleId: parseInt(this.roleId),\n      secLevelId: parseInt(this.secLevelId)\n    };\n    this.screenService.getMenuFunctionByRoleIdMultiFilter(queryParamBase).subscribe(\n      (resp: any) => {\n        this.menuList = resp.responseData.value;\n        if (this.menuList && this.menuList.length) {\n          this.selectedMenuName = this.menuList[0].menuName;\n          this.changeMenu('');\n        }\n      }\n    )\n  }\n\n  changeMenu(event) {\n    if (event) {\n      this.selectedMenuName = event.option.value ? event.option.value.menuName : '';\n    }\n    if (this.selectedMenuName) {\n      this.menuList.filter(key => {\n        if (key.menuName == this.selectedMenuName) {\n          this.subMenuList = key.subMenuNames;\n          this.selectedSubMenuName = this.subMenuList.length ? this.subMenuList[0].subMenuName : '';\n          this.changeSubMenu('')\n        }\n      })\n    }\n  }\n  changeSubMenu(event) {\n    if (event) {\n      this.actions = event.option.value ? event.option.value.actions : {};\n      this.mapActions();\n    } else {\n      this.subMenuList.filter(key => {\n        if (this.selectedSubMenuName == key.subMenuName) {\n          this.actions = key.actions;\n          this.mapActions();\n        }\n      })\n    }\n  }\n\n  mapActions() {\n    this.actionList[0].functionId = this.actions.add_FunctionId;\n    this.actionList[1].functionId = this.actions.edit_FunctionId;\n    this.actionList[2].functionId = this.actions.display_FunctionId;\n    this.actionList[3].functionId = this.actions.delete_FunctionId;\n    this.actionList[0].checked = this.actions.add;\n    this.actionList[1].checked = this.actions.edit;\n    this.actionList[2].checked = this.actions.display;\n    this.actionList[3].checked = this.actions.delete;\n  }\n\n  changeActions(event) {\n    if (event.option.value) {\n      let queryParamBase = {\n        apartmentId: this.sessionService.apartmentId,\n        menuSecLevelFunctionId: event.option.value.functionId,\n        isActive: !event.option.value.checked,\n        updatedBy: this.sessionService.roleId,\n      };\n      this.screenService.updateMenuSecLevelFunctionMapping(queryParamBase).subscribe(\n        (resp: any) => {\n        });\n    }\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}