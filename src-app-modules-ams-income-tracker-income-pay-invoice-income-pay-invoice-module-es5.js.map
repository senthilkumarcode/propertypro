{"version":3,"sources":["webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-pay-invoice.component.html","webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-post-collection/income-post-collection.component.html","webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-pay-invoice-routing.module.ts","webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-pay-invoice.component.scss","webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-pay-invoice.component.ts","webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-pay-invoice.module.ts","webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-post-collection/income-post-collection.component.scss","webpack:///src/app/modules/ams/income-tracker/income-pay-invoice/income-post-collection/income-post-collection.component.ts"],"names":["routes","path","component","IncomePayInvoiceRoutingModule","imports","forChild","exports","IncomePayInvoiceComponent","route","accountsService","sharedService","constantsService","sessionService","isInvoiceDataLoaded","invoiceData","ItemStartIndex","itemLimit","unitFieldType","unitOrder","isMobile","isInvoiceSelected","selectAllInvoices","isAccountDataLoaded","event","totalAmountArray","selectedInvoiceIdArray","getCustInvoices","detail","allDataRecords","datagrid","getrows","forEach","item","checked","push","remainingAmount","custInvoiceID","some","refresh","setTimeout","elem","document","querySelector","scrollTo","getBoundingClientRect","top","window","scroll","behavior","dataRecord","getrowdata","rowId","length","exportdata","filtergroup","jqx","filter","filter_or_operator","filtervalue","filtercondition","filterData","createfilter","operator","addfilter","showfiltercolumnbackground","columnData","datafield","applyfilters","clearfilters","cellsrenderer","row","column","value","columnrenderer","text","width","pinned","sortable","menu","chkedProperty","renderer","format","dateFormat","minwidth","params","ApartmentBlockUnitID","id","getArBalancewithDueByAptBlkUnitId","subscribe","res","invoiceDataList","gridSourceData","localdata","datatype","dataAdapter","totalItems","renderColumns","apartmentId","getIncomeTrackerSubLedgersByApartmentId","accountDataList","apartmentBlockUnitId","accountParams","groupId","getGlAccountsByGroupId","glAccountListData","setActionIncomeTrackerIndex","selector","template","checkInvoiceHeaderEvent","isChecked","stopPropagation","newEvent","CustomEvent","dispatchEvent","checkInvoiceRowEvent","IncomePayInvoiceModule","declarations","bootstrap","IncomePostCollectionComponent","_activatedRoute","_router","lookupService","collection","isCollectionSubmitted","isError","alertMessage","minCollectionAmount","maxCollectionAmount","isMultipleEntry","collectionParams","instrumentTypeId","lookupValueId","depositSlipNumber","collectionStatusId","invoiceIdArray","index","details","parseInt","getCollectionAmount","userId","Date","toISOString","custCreditNote","addCustCreditNotes","addCollection","error","custAdvance","addAdvance","custSecurity","addSecurityDeposit","isCreditNotePaymentMode","reduceCreditNoteAmount","isCustomerAdvancesPaymentMode","reduceCustomerAdvancesAmount","isSecurityDepositPaymentMode","reduceSecurityDepositAmount","amount","custInvoiceObjArray","collectionDetails","postOn","comment","message","setAlertMessage","emit","errorMessage","collectionAccountTypeId","paymentListParams","LookupTypeId","getLookupValueByLookupTypeId","paymentStatusListData","isActive","insListParams","instrumentTypeListData","depositSlipLisData","parseFloat","toFixed","changes","reduce","a","b"],"mappings":"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","file":"src-app-modules-ams-income-tracker-income-pay-invoice-income-pay-invoice-module-es5.js","sourcesContent":["export default \"<div class=\\\"income-pay-invoice-wrapper\\\">\\n\\t\\n\\t<div class=\\\"main\\\">\\n\\n\\t\\t<div class=\\\"bg-card shadow primary\\\" *ngIf=\\\"isAccountDataLoaded\\\">\\n\\t\\t\\t<div class=\\\"sub-details\\\">\\n\\t\\t\\t\\t<p class=\\\"d-inline-block\\\">\\n\\t\\t\\t\\t<span class=\\\"font-medium\\\">Bill to party: </span>\\n\\t\\t\\t\\t{{accountDataList | isdefined:'billToParty' }}</p>\\n\\t\\n\\t\\t\\t\\t<p class=\\\"d-inline-block ml-md-4\\\">\\n\\t\\t\\t\\t<span class=\\\"font-medium\\\">Contact Person: </span>\\n\\t\\t\\t\\t{{accountDataList | isdefined:'primayContact' }}</p>\\n\\t\\n\\t\\t\\t\\t<p class=\\\"d-inline-block ml-md-4\\\">\\n\\t\\t\\t\\t<span class=\\\"font-medium\\\">Block: </span>\\n\\t\\t\\t\\t{{accountDataList | isdefined:'apartmentBlockNumber' }}</p>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<p class=\\\"d-inline-block ml-md-4\\\">\\n\\t\\t\\t\\t<span class=\\\"font-medium\\\">Unit: </span>\\n\\t\\t\\t\\t{{accountDataList | isdefined:'apartmentBlockUnitNumber' }}</p>\\n\\t\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\n\\t\\t<app-loader *ngIf=\\\"!isInvoiceDataLoaded\\\"></app-loader>\\n\\t\\n\\t\\t<ng-container *ngIf=\\\"isInvoiceDataLoaded\\\">\\n\\t\\t\\t\\n\\t\\t\\t<condo-card>\\n\\t\\n\\t\\t\\t\\t<div CondoCardHeader>\\n\\t\\t\\t\\t\\t<div class=\\\"d-flex\\\">\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<h4>Bills to be payed</h4>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"text-secondary\\\">{{totalItems}} Results</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ml-auto mr-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"invoiceData\\\" (ngModelChange)=\\\"onGlSearchFilter()\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\t<app-print-dropdown (outputParams) =\\\"getPrintParams($event)\\\"></app-print-dropdown>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t\\t<div CondoCardBody>\\n\\t\\t\\t\\t\\t<jqxGrid \\n\\t\\t\\t\\t\\t\\t[theme]=\\\"'material'\\\" \\n\\t\\t\\t\\t\\t\\t[width]=\\\"'100%'\\\"\\n\\t\\t\\t\\t\\t\\t[rowsheight]=\\\"48\\\"\\n\\t\\t\\t\\t\\t\\t[autoheight]=\\\"true\\\"\\n\\t\\t\\t\\t\\t\\t[pageable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t\\t[filterable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t\\t[sortable]=\\\"true\\\" \\n\\t\\t\\t\\t\\t\\t[source]=\\\"invoiceDataList\\\"\\n\\t\\t\\t\\t\\t\\t[columns]=\\\"columnData\\\"\\n\\t\\t\\t\\t\\t\\t[enablehover]=\\\"false\\\"\\n\\t\\t\\t\\t\\t#datagrid>\\n\\t\\t\\t\\t\\t  </jqxGrid>\\n\\t\\t\\t\\t</div>\\n\\t\\n\\t\\t\\t</condo-card>\\n\\t\\n\\t\\t</ng-container>\\n\\t\\n\\t\\t<app-income-post-collection class=\\\"post-collection-comp\\\" *ngIf=\\\"isInvoiceSelected\\\" [totalAmountArray]=\\\"totalAmountArray\\\" [invoiceIdArray]=\\\"selectedInvoiceIdArray\\\" (collectionParams)=\\\"isCollectionMade($event)\\\"></app-income-post-collection>\\n\\n\\t</div>\\n\\n</div>\";","export default \"<div class=\\\"income-post-collection-wrapper mt-5\\\">\\n\\n\\t<app-loader *ngIf=\\\"!isCollectionSubmitted\\\"></app-loader>\\n\\n\\t<ng-container *ngIf=\\\"isCollectionSubmitted\\\">\\n\\n\\t\\t<h4 class=\\\"mb-4\\\">Post Collection</h4>\\n\\n\\t\\t<form #postIncomeCollectionForm = \\\"ngForm\\\" name=\\\"postIncomeCollectionForm\\\" (ngSubmit)=\\\"submitIncomePostCollectionForm()\\\"  novalidate>\\n\\n\\t\\t\\t<div class=\\\"bg-card shadow\\\">\\n\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Amount<span class=\\\"ml-2 text-warn font-medium\\\">*</span></label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" OnlyNumber=\\\"true\\\" [customMin] =\\\"minCollectionAmount\\\" [customMax] =\\\"maxCollectionAmount\\\" class=\\\"form-control\\\" #collectionAmount=\\\"ngModel\\\" placeholder=\\\"Enter text\\\" name=\\\"collectionAmount\\\" [(ngModel)]=\\\"collection.amount\\\" required [readonly]=\\\"isMultipleEntry\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"collectionAmount.errors\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"error\\\">Enter amount equal to or lesser than the selected entries</p>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Instrument Type\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Type\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"instrumentTypeListData\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"collection.instrumentTypeId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"lookupValueId\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getInstrumentType($event)\\\" \\n\\t\\t\\t\\t\\t\\t></condo-select>\\t\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Deposit Slip Number\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Number\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"depositSlipLisData\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"collection.depositSlipNumber\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"id\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getDepositSlip($event)\\\" \\n\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Post On*</label>\\n\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"collectionPostOn\\\" [owlDateTime]=\\\"collectionPostOn\\\" [owlDateTimeTrigger]=\\\"collectionPostOn\\\" placeholder=\\\"Date\\\" [(ngModel)]=\\\"collection.postOn\\\">\\n\\t\\t\\t\\t\\t\\t\\t<owl-date-time #collectionPostOn [pickerType]=\\\"'calendar'\\\"></owl-date-time>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"date-btn\\\" [owlDateTimeTrigger]=\\\"collectionPostOn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon svgIcon=\\\"feather:calendar\\\"></mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<condo-select \\n\\t\\t\\t\\t\\t\\t\\tlabelText=\\\"Payment Status\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldPlaceholder=\\\"Select Status\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldRequired]=\\\"'required'\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldList]=\\\"paymentStatusListData\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldValue=\\\"lookupValueName\\\"\\n\\t\\t\\t\\t\\t\\t\\t[fieldModel]=\\\"collection.collectionStatusId\\\"\\n\\t\\t\\t\\t\\t\\t\\tfieldId=\\\"lookupValueId\\\"\\n\\t\\t\\t\\t\\t\\t\\t(fieldParams)=\\\"getPaymentStatus($event)\\\" \\n\\t\\t\\t\\t\\t\\t></condo-select>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-box\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label>Comments</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter text\\\" name=\\\"comments\\\" [(ngModel)]=\\\"collection.comment\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\n\\n\\t\\t\\t\\t</div>\\n\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<div class=\\\"text-right\\\">\\n\\t\\t\\t\\t<button class=\\\"mt-4\\\" mat-flat-button [color]=\\\"'primary'\\\">Submit</button>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\n\\t</ng-container>\\n\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncomePayInvoiceComponent } from './income-pay-invoice.component';\n\n\nexport const routes: Routes = [\n  { path: ':id', component: IncomePayInvoiceComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IncomePayInvoiceRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2luY29tZS10cmFja2VyL2luY29tZS1wYXktaW52b2ljZS9pbmNvbWUtcGF5LWludm9pY2UuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AccountsService } from 'src/app/api/controllers/Accounts';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { ConstantsService } from 'src/app/shared/services/constants.service';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as moment from 'moment';\n\nimport { jqxGridComponent } from 'src/app/shared/jqwidgets-scripts/jqwidgets-ts/angular_jqxgrid';\n\n\n@Component({\n  selector: 'app-income-pay-invoice',\n  templateUrl: './income-pay-invoice.component.html',\n  styleUrls: ['./income-pay-invoice.component.scss']\n})\nexport class IncomePayInvoiceComponent implements OnInit {\n\n  isInvoiceDataLoaded:boolean = false;\n\n  invoiceData:string = \"\";\n  invoiceDataList:any;\n\n  userDataList:any;\n  glAccountListData:any;\n\n  ItemStartIndex:any = 0;\n  ItemEndIndex:any;\n  totalItems:any;\n  itemLimit:any = 10;\n\n  unitFieldType:string = \"unitno\";\n  unitOrder:boolean = true;\n\n  isMobile:boolean = false;\n\n  isInvoiceSelected:boolean = false;\n  selectAllInvoices:boolean = false;\n\n  totalAmountArray:any;\n  selectedInvoiceIdArray:any;\n\n  accountDataList:any;\n  isAccountDataLoaded:boolean = false;\n\n  @ViewChild('datagrid', { static: false }) datagrid: jqxGridComponent;\n\n  columnData:any ;\n  gridSourceData:any;\n\n  constructor(\n    private route: ActivatedRoute,\n  \tprivate accountsService:AccountsService,\n    private sharedService:SharedService,\n    private constantsService:ConstantsService,\n  \tprivate sessionService:SessionService\n  ) { }\n\n  isCollectionMade(event){\n    if(event){\n\n      this.totalAmountArray = [];\n      this.selectedInvoiceIdArray = [];\n      this.isInvoiceSelected = false;\n\n      this.getCustInvoices();\n    }\n  }\n\n  @HostListener('window:onCheckInvoiceHeader', ['$event.detail'])\n  onCheckInvoiceHeader(detail) {\n\n    let allDataRecords = this.datagrid.getrows()\n\n    this.totalAmountArray = [];\n    this.selectedInvoiceIdArray = [];\n\n    allDataRecords.forEach(item => {\n      item.checked = detail.checked\n      this.totalAmountArray.push(item.remainingAmount)\n      this.selectedInvoiceIdArray.push(item.custInvoiceID);\n    });\n\n    this.isInvoiceSelected = allDataRecords.some(item => {\n      return item.checked\n    })\n\n    this.datagrid.refresh();\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.post-collection-comp');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  @HostListener('window:onCheckInvoiceRow', ['$event.detail'])\n  onCheckInvoiceRow(detail) {\n    \n    let allDataRecords = this.datagrid.getrows()\n    var dataRecord = this.datagrid.getrowdata(detail.rowId)\n\n    dataRecord.checked = detail.checked;\n\n    this.totalAmountArray = [];\n    this.selectedInvoiceIdArray = [];\n\n    allDataRecords.forEach(item => {\n      if(item.checked){\n        length++;\n        this.totalAmountArray.push(item.remainingAmount);\n        this.selectedInvoiceIdArray.push(item.custInvoiceID);\n      }\n    });\n\n    this.isInvoiceSelected = allDataRecords.some(item => {\n      return item.checked\n    })\n\n    setTimeout(() => {\n\n      var elem = document.querySelector('.post-collection-comp');\n      var scrollTo = elem.getBoundingClientRect().top - 100;\n\n      window.scroll({\n        top: scrollTo,\n        behavior: 'smooth'\n      });\n\n    }, 100);\n\n  }\n\n  getPrintParams(event){\n    this.datagrid.exportdata(event, 'PayInvoiceData');\n  }\n\n  onGlSearchFilter() {\n\n    if(this.invoiceData != \"\"){\n\n      let filtergroup = new jqx.filter();\n      let filter_or_operator = 1;\n      let filtervalue = this.invoiceData;\n      let filtercondition = 'contains';\n      let filterData = filtergroup.createfilter('stringfilter', filtervalue, filtercondition);\n      filtergroup.operator = 'or';\n      filtergroup.addfilter(filter_or_operator, filterData);\n\n      this.datagrid.showfiltercolumnbackground(false);\n\n      this.columnData.forEach(item => {\n        if(item.datafield != 'Actions') {\n          this.datagrid.addfilter(item.datafield, filtergroup, true);\n        }\n      })\n\n      this.datagrid.applyfilters();\n      \n    }\n    else {\n      this.datagrid.clearfilters();\n    }\n\n  }\n\n  renderColumns() {\n\n    let cellsrenderer = (row, column, value) => {\n      return '<div class=\"jqx-custom-inner-cell\">' + value + '</div>';\n    }\n\n    let columnrenderer = (value) => {\n      return '<div style=\"padding: 14px\">' + value + '</div>';\n    }\n\n    this.columnData = [{\n      text: '',\n      datafield: 'checked',\n      width: 80,\n      pinned: true,\n      sortable: false,\n      menu: false,\n      cellsrenderer: (row, column, value) => {\n\n         var chkedProperty;\n         \n         if(value){\n           chkedProperty = 'checked=\"true\"';\n         }\n         else {\n           chkedProperty = '';\n         }\n\n         return '<div class=\"jqx-custom-inner-cell\">'\n                 + '<div class=\"form-group mb-0 w-100\">'\n                   +  '<div class=\"form-check text-center\">'\n                       + '<input type=\"checkbox\" class=\"form-check-input\" onClick=\"checkInvoiceRowEvent('+ row +', this.checked)\" id=\"defaultChecker'+ row +'\" name=\"defaultChecker'+ row +'\" '+ chkedProperty +'>'\n                       + '<label class=\"form-check-label\" for=\"defaultChecker'+ row +'\"></label>'\n                   +  '</div>'\n                 + '</div>'\n              + '</div>'\n      },\n      renderer: (value) => {\n\n       return '<div style=\"padding: 10px\">'\n       + '<div class=\"form-group mb-0 w-100\">'\n         +  '<div class=\"form-check check-header text-center\">'\n             + '<input type=\"checkbox\" id=\"selectAllDefaulters\" name=\"selectAllDefaulters\" onClick=\"checkInvoiceHeaderEvent(event, this.checked)\" >'\n             + '<label class=\"form-check-label\" for=\"selectAllDefaulters\"></label>'\n         +  '</div>'\n       + '</div>'\n      + '</div>'\n\n      }\n    },\n    {\n      text: 'Bill No',\n      datafield: 'custInvoiceID',\n      width: 120,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    },\n    {\n      text: 'Bill Date',\n      datafield: 'custInvoiceDate',\n      width: 120,\n      cellsrenderer: (row, column, value): string => {\n        return '<div class=\"jqx-custom-inner-cell\">' + moment(value).format(this.constantsService.dateFormat) + '</div>'\n      },\n      renderer: columnrenderer\n    },\n    {\n      text: 'Due Date',\n      datafield: 'dueDate',\n      width: 120,\n      cellsrenderer: (row, column, value): string => {\n        return '<div class=\"jqx-custom-inner-cell\">' + moment(value).format(this.constantsService.dateFormat) + '</div>'\n      },\n      renderer: columnrenderer\n    },\n    {\n      text: 'Comments',\n      datafield: 'comments',\n      minwidth: 180,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    },\n    {\n      text: 'Bill Amount',\n      datafield: 'billAmount',\n      minwidth: 120,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    },\n    {\n      text: 'Remaining Amount',\n      datafield: 'remainingAmount',\n      minwidth: 120,\n      cellsrenderer: cellsrenderer,\n      renderer: columnrenderer\n    }]\n\n  }\n\n  getCustInvoices() {\n\n    let params = {\n      ApartmentBlockUnitID: this.route.params['value'].id\n    }\n\n    this.accountsService.getArBalancewithDueByAptBlkUnitId(params).subscribe((res:any) => {\n\n      var invoiceDataList = res;\n\n      this.gridSourceData = {\n        localdata: invoiceDataList,\n        datatype: \"array\"\n      }\n\n      this.invoiceDataList = new jqx.dataAdapter(this.gridSourceData);\n      this.totalItems = invoiceDataList.length;\n\n      this.isInvoiceDataLoaded = true;\n      \n      this.renderColumns();\n\n    })\n\n  }\n\n  ngOnInit() {\n\n  this.getCustInvoices();\n\n  let params = {\n    apartmentId: this.sessionService.apartmentId\n  }\n\n  this.accountsService.getIncomeTrackerSubLedgersByApartmentId(params).subscribe((res:any) => {\n\n      this.accountDataList = res.filter(item => {\n        return item.apartmentBlockUnitId == this.route.params['value'].id;\n      });\n\n      this.isAccountDataLoaded = true;\n\n  });\n\n\tvar accountParams = {\n      apartmentId: this.sessionService.apartmentId,\n      groupId: 3\n  }\n\n  this.accountsService.getGlAccountsByGroupId(accountParams).subscribe((res:any) => {\n    this.glAccountListData = res;\n  });\n\n  this.sharedService.setActionIncomeTrackerIndex(this.route.params['value'].id)\n\n  }\n\n}\n\n\nlet checkInvoiceHeaderEvent = (event, isChecked) => {\n\n  event.stopPropagation();\n  var newEvent = new CustomEvent('onCheckInvoiceHeader', {\n    detail : {\n      checked: isChecked\n    }\n  })\n  window.dispatchEvent(newEvent);\n\n}\n(window as any).checkInvoiceHeaderEvent = checkInvoiceHeaderEvent;\n\nlet checkInvoiceRowEvent = (row, isChecked) => {\n\n  var event = new CustomEvent('onCheckInvoiceRow', {\n    detail: {\n        rowId: row,\n        checked: isChecked\n    }\n  })\n  window.dispatchEvent(event);\n\n}\n(window as any).checkInvoiceRowEvent = checkInvoiceRowEvent;\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { CondoCardModule } from 'src/app/modules/ui/card/card.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\nimport { ListModule } from 'src/app/modules/ui/list/list.module';\n\nimport { RouterModule } from '@angular/router';\nimport { routes } from './income-pay-invoice-routing.module';\nimport { IncomePayInvoiceRoutingModule } from './income-pay-invoice-routing.module';\n\nimport { IncomePayInvoiceComponent } from './income-pay-invoice.component';\nimport { IncomePostCollectionComponent } from './income-post-collection/income-post-collection.component';\n\n@NgModule({\n  declarations: [IncomePayInvoiceComponent, IncomePostCollectionComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    CondoCardModule,\n    SelectModule,\n    ListModule,\n    IncomePayInvoiceRoutingModule\n  ],\n  bootstrap: [\n    IncomePayInvoiceComponent\n  ]\n})\nexport class IncomePayInvoiceModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYW1zL2luY29tZS10cmFja2VyL2luY29tZS1wYXktaW52b2ljZS9pbmNvbWUtcG9zdC1jb2xsZWN0aW9uL2luY29tZS1wb3N0LWNvbGxlY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { AccountsService } from 'src/app/api/controllers/Accounts';\nimport { SharedService } from 'src/app/shared/services/shared.service';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { SessionService } from 'src/app/core/session/session.service';\n\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-income-post-collection',\n  templateUrl: './income-post-collection.component.html',\n  styleUrls: ['./income-post-collection.component.scss']\n})\nexport class IncomePostCollectionComponent implements OnInit {\n  \n  collection:any = {};\n\n  instrumentTypeListData:any;\n  paymentStatusListData:any;\n  glAccountListData:any;\n  depositSlipLisData:any;\n\n  isCollectionSubmitted:boolean = false;\n\n  isError:boolean = false;\n  alertMessage:string = \"\";\n\n  minCollectionAmount:number = 1;\n  maxCollectionAmount:any = 0;\n\n  isMultipleEntry:boolean = false;\n\n  apartmentBlockUnitId:any;\n\n  @Input() totalAmountArray:any;\n  @Input() invoiceIdArray:any;\n\n  custInvoiceObjArray:any;\n\n  @Output() collectionParams = new EventEmitter(false);\n\n  constructor(\n    private _activatedRoute: ActivatedRoute,\n    private _router: Router,\n    private accountsService:AccountsService,\n    private lookupService:LookupService,\n  \tprivate sharedService:SharedService,\n  \tprivate sessionService:SessionService\n  ) { }\n\n  getInstrumentType(event) {\n    this.collection.instrumentTypeId = event[0].lookupValueId\n  }\n\n  getDepositSlip(event){\n    this.collection.depositSlipNumber = event[0].id\n  }\n\n  getPaymentStatus(event){\n    this.collection.collectionStatusId = event[0].lookupValueId\n  }\n\n  isCreditNotePaymentMode(){\n    return ( this.collection.instrumentTypeId == 153 || this.collection.instrumentTypeId == 155 ) ? true : false\n  }\n\n  isCustomerAdvancesPaymentMode(){\n    return this.collection.instrumentTypeId == 219 ? true : false\n  }\n\n  isSecurityDepositPaymentMode(){\n    return this.collection.instrumentTypeId == 220 ? true : false\n  }\n\n  reduceCreditNoteAmount() {\n\n    _.each(this.invoiceIdArray, (item, index) => {\n\n      let details = {\n\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentBlockUnitId\": parseInt(this.apartmentBlockUnitId),\n        \"blockUnitUserId\": null,\n        \"custCreditNoteId\": null,\n        \"glaccountId\": null,\n        \"invoiceId\": item,\n        \"collectionId\": null,\n        \"transactionType\": 1,\n        \"amount\": this.getCollectionAmount(this.totalAmountArray[index]),\n        \"comment\": \"\",\n        \"comment2\": \"\",\n        \"active\": true,\n        \"insertedBy\": this.sessionService.userId,\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n  \n      }\n\n      let params = {\n        custCreditNote: details\n      }\n\n      this.accountsService.addCustCreditNotes(params).subscribe((res:any) => {\n\n        if(index == (this.invoiceIdArray.length-1)){\n          this.addCollection();\n        }\n\n      },\n      error => {\n        \n      });\n\n    });\n\n  }\n\n  reduceCustomerAdvancesAmount() {\n\n    _.each(this.invoiceIdArray, (item, index) => {\n\n      let details = {\n\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentBlockUnitId\": parseInt(this.apartmentBlockUnitId),\n        \"blockUnitUserId\": null,\n        \"glaccountId\": null,\n        \"invoiceId\": item,\n        \"collectionId\": null,\n        \"transactionType\": 1,\n        \"amount\": this.getCollectionAmount(this.totalAmountArray[index]),\n        \"comment\": \"\",\n        \"comment2\": \"\",\n        \"active\": true,\n        \"insertedBy\": this.sessionService.userId,\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n  \n      }\n\n      let params = {\n        custAdvance: details\n      }\n\n      this.accountsService.addAdvance(params).subscribe((res:any) => {\n\n        if(index == (this.invoiceIdArray.length-1)){\n          this.addCollection();\n        }\n        \n      },\n      error => {\n        \n      });\n\n    });\n\n  }\n\n  reduceSecurityDepositAmount() {\n\n    _.each(this.invoiceIdArray, (item, index) => {\n\n      let details = {\n\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentBlockUnitId\": parseInt(this.apartmentBlockUnitId),\n        \"blockUnitUserId\": null,\n        \"securityDepositId\": 0,\n        \"glaccountId\": null,\n        \"invoiceId\": item,\n        \"collectionId\": null,\n        \"transactionType\": 1,\n        \"amount\": this.getCollectionAmount(this.totalAmountArray[index]),\n        \"comment\": \"\",\n        \"comment2\": \"\",\n        \"active\": true,\n        \"insertedBy\": this.sessionService.userId,\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": null,\n        \"updatedOn\": null\n  \n      }\n\n      let params = {\n        custSecurity: details\n      }\n\n      this.accountsService.addSecurityDeposit(params).subscribe((res:any) => {\n\n        if(index == (this.invoiceIdArray.length-1)){\n          this.addCollection();\n        }\n        \n      },\n      error => {\n        \n      });\n\n    });\n\n  }\n\n  submitIncomePostCollectionForm() {\n\n    if(this.isCreditNotePaymentMode()){\n      this.reduceCreditNoteAmount()\n    }\n\n    if(this.isCustomerAdvancesPaymentMode()){\n      this.reduceCustomerAdvancesAmount()\n    }\n\n    if(this.isSecurityDepositPaymentMode()){\n      this.reduceSecurityDepositAmount()\n    }\n\n  }\n\n  getCollectionAmount(amount) {\n    if(!this.isMultipleEntry)\n      return this.collection.amount\n    else\n      return amount\n  }\n\n  addCollection() {\n\n    var custInvoiceObjArray = [];\n\n    _.each(this.invoiceIdArray, (item, index) => {\n\n      var details = {\n            \n        \"apartmentId\": this.sessionService.apartmentId,\n        \"collectionId\": 0,\n        \"invoiceId\": item,\n        \"glAccountId\": 0,\n        \"instrumentTypeId\": parseInt(this.collection.instrumentTypeId),\n        \"amount\": this.getCollectionAmount(this.totalAmountArray[index]),\n        \"comment\": \"\",\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.sessionService.userId),\n        \"insertedOn\": \"2020-01-10T06:59:54.422Z\",\n        \"updatedBy\": 0,\n        \"updatedOn\": \"2020-01-10T06:59:54.422Z\"\n      }\n  \n      custInvoiceObjArray.push(details);\n\n    });\n\n    this.isCollectionSubmitted = false;\n\n    let collectionDetails = {\n\n      \"apartmentId\": this.sessionService.apartmentId,\n      \"receiptNumber\": 0,\n      \"receiptDate\": new Date().toISOString(),\n      \"amount\": parseInt(this.collection.amount),\n      \"instrumentTypeId\": parseInt(this.collection.instrumentTypeId),\n      \"postOn\": this.collection.postOn || new Date().toISOString(),\n      \"collectionAccountTypeId\": 165, // account number\n      \"depositSlipNumber\": 0,\n      \"postExcessAmountTo\": 0,\n      \"collectionStatusId\": parseInt(this.collection.collectionStatusId),\n      \"collectionStatus\": \"\",\n      \"isEmailSent\": true,\n      \"isSmssent\": true,\n      \"comment\": this.collection.comment || \"\",\n      \"isActive\": true,\n      \"insertedBy\": parseInt(this.sessionService.userId),\n      \"insertedOn\": new Date().toISOString(),\n      \"updatedBy\": null,\n      \"updatedOn\": null,\n      \"invoiceId\": this.invoiceIdArray[0],\n      \"transReference1\": \"\",\n      \"transReference2\": \"\",\n      \"glAcctIndicator\": \"Asset\",\n      \"collectionInvoice\" : custInvoiceObjArray\n      }\n      \n      let params = {\n        collection: collectionDetails\n      }\n\n      this.accountsService.addCollection(params).subscribe((res:any) => {\n\n        if(res.message){\n\n              this.isCollectionSubmitted = true;\n              this.sharedService.setAlertMessage(\"Collection done successfully\");\n              this.collectionParams.emit(true);\n            }\n            else {\n\n              this.isCollectionSubmitted = true;\n              this.isError = true;\n              this.alertMessage = res.errorMessage;\n            }\n\n      },\n      error => {\n        this.isCollectionSubmitted = true;\n      });\n\n  }\n\n  ngOnInit() {\n\n  \tthis.collection = {};\n  \tthis.collection.instrumentTypeId = \"\";\n  \tthis.collection.collectionAccountTypeId = \"\";\n  \tthis.collection.depositSlipNumber = \"\";\n    this.collection.collectionStatusId = \"\";\n    \n    this.apartmentBlockUnitId = this._activatedRoute.params['value'].id\n\n    let paymentListParams = {\n      LookupTypeId: 34\n    }\n\n  \t//payment status\n    this.lookupService.getLookupValueByLookupTypeId(paymentListParams).subscribe((res:any) => {\n          \n       this.paymentStatusListData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n    let insListParams = {\n      LookupTypeId: 33\n    }\n\n  \t//payment mode\n    this.lookupService.getLookupValueByLookupTypeId(insListParams).subscribe((res:any) => {\n          \n       this.instrumentTypeListData = res.filter( item => {\n          return item.isActive;\n        });\n\n    },\n    error => {\n      \n    }\n    );\n\n    var accountParams = {\n      apartmentId: this.sessionService.apartmentId,\n      groupId: 3\n    }\n\n    this.accountsService.getGlAccountsByGroupId(accountParams).subscribe((res:any) => {\n\n  \t\tthis.glAccountListData = res;\n\n  \t});\n\n    this.depositSlipLisData = [{id:1},{id:2},{id:3},{id:4}];\n    this.isCollectionSubmitted = true;\n\n    this.collection.amount = parseFloat(this.totalAmountArray[0]).toFixed(2)\n    this.maxCollectionAmount = this.collection.amount\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if(this.totalAmountArray.length > 1){\n      \n      this.isMultipleEntry = true;\n      this.collection.amount = this.totalAmountArray.reduce((a, b) => {\n        return a + b\n      }).toFixed(2)\n\n      this.maxCollectionAmount = this.collection.amount;\n\n    }\n    else {\n      this.isMultipleEntry = false;\n      this.collection.amount = parseFloat(this.totalAmountArray[0]).toFixed(2)\n      this.maxCollectionAmount = this.collection.amount\n    }\n\n  }\n\n}\n"]}