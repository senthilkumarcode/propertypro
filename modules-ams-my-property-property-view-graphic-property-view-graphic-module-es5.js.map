{"version":3,"sources":["webpack:///src/app/modules/ams/my-property/property-view-graphic/property-view-graphic.component.html","webpack:///src/app/modules/ams/my-property/property-view-graphic/property-view-graphic-routing.module.ts","webpack:///src/app/modules/ams/my-property/property-view-graphic/property-view-graphic.component.scss","webpack:///src/app/modules/ams/my-property/property-view-graphic/property-view-graphic.component.ts","webpack:///src/app/modules/ams/my-property/property-view-graphic/property-view-graphic.module.ts"],"names":["routes","path","component","PropertyViewGraphicRoutingModule","imports","forChild","exports","graph","PropertyViewGraphicComponent","element","apartmentService","sharedService","cookieService","fileUploadService","fileDownloadService","sanitizer","lookupService","propertyManagerService","dialog","sessionService","fileDetailService","loading","isShowBuilder","bNo","fNo","towerList","floorList","propertyTypeList","unitFilterList","isShowOver","localStorage","setItem","getBlockList","getPropertyType","id","name","bootMe","e","selectedPropertyType","lookupValueId","Number","getUnitProperty","getAssetProperty","getFacilityProperty","getMaintananceProperty","getParam","apartmentId","propertyPOIType","getAllPropertyPoiUnitByPropertyPoiType","subscribe","resp","getAllPropertyPoiAssetByPropertyPoiType","getAllPropertyPoiFacilityByPropertyPoiType","getAllPropertyPoiOpMaintenanceByPropertyPoiType","param","getApartmentBlockByApartmentId","selectedTower","apartmentBlockId","getFloorList","undefined","error","getFloorParam","apartmentblockId","getApartmentBlockFloorByApartmentIdBlockId","length","selectedFloor","apartmentBlockFloorId","selectFloor","filter","key","selectedFloorLabel","floorLabel","selectedFloorNo","floorno","getPropertyMap","propertyMapFileId","getLookUpParam","ApartmentId","LookupTypeId","getLookupValueByLookupTypeId","type","data","onChangeVal","dialogRef","open","width","position","right","afterClosed","result","objectVal","push","splice","$","val","toString","nodeId","poiId","updatePOI","propertyId","getFloorProperty","getPropertyMapFileById","floorPropertyData","assignData","floorPictureFileDetailsId","mapJsonFile","setTimeout","removeD3Elements","deleteGraph","getFileDetails","customGraphUpdate","floorMapJson","imageId","newParams","fileDetailsId","getFileDetailsById","res","downloadFile","filePath","blob","body","objectURL","URL","createObjectURL","sanitizeUrl","bypassSecurityTrustUrl","customImageUpdalod","changingThisBreaksApplicationSecurity","downloadParam","fileNameOnBlob","savefileNameWithPath","downloadAsync","docEl","document","documentElement","bodyEl","getElementsByTagName","window","innerWidth","clientWidth","height","innerHeight","clientHeight","nodes","edges","svg","d3","select","append","attr","GraphCreator","setIdCt","downloadGraph","addPropertyMap","propertyMapFile","JSON","stringify","updatedGraph","parseInt","get","Date","toISOString","addPropertyMapFile","updatePropertyMap","updatePropertyMapFile","savePFNodes","saveEdges","savePFEdges","prefix","sid","tid","nobj","savePFNode","forEach","i","x","y","kind","source","target","fullObj","maponly","idct","buildingNo","floorNo","output","selectedUnitFilterValue","selectedObj","selectedCategory","setPOIId","updateProperty","fileUpload","nativeElement","find","trigger","removeItem","remove","matDrawer","close","selector","template","encapsulation","None","PropertyViewGraphicModule","declarations","bootstrap"],"mappings":"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","file":"modules-ams-my-property-property-view-graphic-property-view-graphic-module-es5.js","sourcesContent":["export default \"<div class=\\\"helpdesk-all-tickets-wrapper content-layout right-sidebar-fullheight-basic-inner-scroll main\\\">\\n  <mat-drawer-container [hasBackdrop]=\\\"true\\\" #matDrawer>\\n    <mat-drawer class=\\\"col-lg-3 col-md-3 col-sm-3 col-xs-3 p-0\\\" #filter mode=\\\"over\\\" position=\\\"end\\\">\\n      <div class=\\\"helpdesk-filter-drawer\\\">\\n        <div class=\\\"title\\\">\\n          <h4> Filter </h4>\\n          <div class=\\\"ml-auto\\\">\\n            <button mat-icon-button (click)=\\\"goBack()\\\">\\n              <mat-icon [svgIcon]=\\\"'close'\\\"></mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n        <form #propertyFilterForm=\\\"ngForm\\\" name=\\\"categoryFilter\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12\\\" *ngIf=\\\"selectedFloor\\\">\\n              <condo-select labelText=\\\"Property Type\\\" fieldPlaceholder=\\\"Select Property\\\" [fieldRequired]=\\\"'null'\\\"\\n                [fieldList]=\\\"propertyTypeList\\\" fieldValue=\\\"lookupValueName\\\" [fieldModel]=\\\"selectedPropertyType\\\"\\n                fieldId=\\\"lookupValueId\\\" (fieldParams)=\\\"selectPropertyType($event)\\\"></condo-select>\\n            </div>\\n            <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-xs-12 mt-3\\\" *ngIf=\\\"selectedFloor\\\">\\n              <condo-select labelText=\\\"Unit Category\\\" fieldPlaceholder=\\\"Select Unit Category\\\" [fieldRequired]=\\\"'null'\\\"\\n                [fieldList]=\\\"unitFilterList\\\" fieldValue=\\\"name\\\" [fieldModel]=\\\"selectedUnitFilterValue\\\" fieldId=\\\"id\\\"\\n                (fieldParams)=\\\"selectedUnitFilter($event)\\\"></condo-select>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </mat-drawer>\\n    <mat-drawer-content>\\n      <div class=\\\"poiManagement\\\">\\n        <div class=\\\"topBar\\\">\\n          <form  #selectPropertyForm=\\\"ngForm\\\" name=\\\"selectProperty\\\" novalidate>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-3 col-xs-12\\\">\\n                <condo-select labelText=\\\"Tower\\\" fieldPlaceholder=\\\"Select Tower\\\" [fieldRequired]=\\\"'null'\\\"\\n                  [fieldList]=\\\"towerList\\\" fieldValue=\\\"description\\\" [fieldModel]=\\\"selectedTower\\\"\\n                  fieldId=\\\"apartmentBlockId\\\" (fieldParams)=\\\"getFloorList($event)\\\"></condo-select>\\n              </div>\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-3 col-xs-12\\\">\\n                <condo-select labelText=\\\"Floor\\\" fieldPlaceholder=\\\"Select Floor\\\" [fieldRequired]=\\\"'null'\\\"\\n                  [fieldList]=\\\"floorList\\\" fieldValue=\\\"floorLabel\\\" [fieldModel]=\\\"selectedFloor\\\"\\n                  fieldId=\\\"apartmentBlockFloorId\\\" (fieldParams)=\\\"selectFloor($event)\\\"></condo-select>\\n              </div>\\n              <div class=\\\"ml-auto mr-5 d-flex align-items-center\\\">\\n                <button mat-flat-button [color]=\\\"'accent'\\\" class=\\\"ml-3\\\" (click)=\\\"filter.toggle()\\\">\\n                  <mat-icon class=\\\"mr-2\\\" svgIcon=\\\"heroicons_outline:filter\\\"></mat-icon>Filter\\n                </button>\\n              </div>\\n              <div [hidden]=\\\"true\\\">\\n                <input type=\\\"text\\\" id=\\\"buildingNo\\\" value=\\\"\\\" placeholder=\\\"Building No\\\" name=\\\"buildingNumber\\\" [(ngModel)]=\\\"bNo\\\">\\n                <input type=\\\"text\\\" id=\\\"floorNo\\\" value=\\\"\\\" placeholder=\\\"Floor No\\\" name=\\\"floorNumberNumber\\\" [(ngModel)]=\\\"fNo\\\">\\n                <input #nodeId type=\\\"text\\\" id=\\\"spanNode\\\">\\n                <input #poiId type=\\\"text\\\" id=\\\"poiId\\\">\\n                <input #nodeKind type=\\\"text\\\" id=\\\"nodeKind\\\">\\n                <input #type type=\\\"text\\\" id=\\\"type\\\">\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n        <div class=\\\"pathBuilder\\\">\\n          <!--<md-progress-bar mode=\\\"indeterminate\\\"></md-progress-bar>-->\\n          <div class=\\\"dragContainer\\\" id=\\\"lcanvas\\\"\\n            [ngStyle]=\\\"isShowBuilder ? {'display':'flex','justify-content':'center'} : ''\\\">\\n            <!--<div class=\\\"floor\\\" id=\\\"lcanvas\\\">-->\\n            <!--<div id=\\\"image-wrapper\\\" *ngIf=\\\"isShowBuilder\\\">-->\\n            <!--</div>-->\\n            <!--</div>-->\\n\\n            <div class=\\\"upload\\\" [appDragAndDrop] *ngIf=\\\"!isShowBuilder\\\" id=\\\"setFloorImg\\\">\\n              <!-- <img class=\\\"mb-5\\\" src=\\\"../../../../../assets/images/plus-circle-icon.png\\\" alt=\\\"\\\"> -->\\n              <p class=\\\"addFloor\\\">Floor Plan Not Configured</p>\\n              <div class=\\\"legends\\\">\\n                <!-- <span class=\\\"d-flex\\\" >\\n                   <img class=\\\"mr-20\\\" src=\\\"../../../../../assets/images/folder-icon.png\\\" alt=\\\"\\\">\\n                    Browse File Computer</span> -->\\n              </div>\\n              <div class=\\\"borderLine\\\"></div>\\n              <span class=\\\"support\\\">Supported File Formats</span>\\n              <div class=\\\"brandIcons\\\">\\n                <img src=\\\"../../../../../assets/images/jpg-icon.png\\\" alt=\\\"\\\">\\n                <img src=\\\"../../../../../assets/images/png-icon.png\\\" alt=\\\"\\\">\\n              </div>\\n              <span class=\\\"smallText\\\">Supported File Formats<span [style.direction]=\\\"'LTR'\\\">1000*1200 px</span></span>\\n            </div>\\n            <!-- <input type=\\\"file\\\" #fileInput (change)=\\\"uploadFile($event.target.files)\\\" id=\\\"hidden-bg-upload\\\" accept=\\\"image/x-png,image/jpeg\\\"> -->\\n            <!--<input type=\\\"file\\\" id=\\\"hidden-graph-upload\\\">-->\\n            <!--<img *ngIf=\\\"false\\\" id=\\\"pinch-zoom-image-id\\\" class=\\\"pinch-zoom-image\\\" src=\\\"../assets/images/floor_plan.jpg\\\">-->\\n          </div>\\n          <!-- <div class=\\\"floorLegendLeft\\\" *ngIf=\\\"isShowBuilder\\\">\\n              <img src=\\\"../../assets/icons/legend.png\\\" alt=\\\"\\\" (click)=\\\"isShowLegend = !isShowLegend\\\">\\n              <app-floating-btn class=\\\"applgout\\\"   [position]=\\\"{ top: '-6px', left: '40px'}\\\"\\n                                [custom]=\\\"true\\\"\\n                                *ngIf=\\\"isShowLegend\\\">\\n                <div class=\\\"legendBody\\\">\\n                  <span class=\\\"legendData\\\" [style.direction]=\\\"langDirection\\\">{{langObj?.poi}}<span class=\\\"ml-2\\\">:</span> <span class=\\\"ml-2\\\" [style.color]=\\\"'#0fce21'\\\">{{rawPOIList?.poiCount ? rawPOIList?.poiCount : 0}}</span></span>\\n                  <span class=\\\"legendData\\\" [style.direction]=\\\"langDirection\\\">{{langObj?.facility}} <span class=\\\"ml-2\\\">:</span> <span class=\\\"ml-2\\\" [style.color]=\\\"'#440084'\\\">{{rawPOIList?.facilityCount ? rawPOIList?.facilityCount : 0}}</span></span>\\n                  <span class=\\\"legendData\\\" [style.direction]=\\\"langDirection\\\">{{langObj?.active}} <span class=\\\"ml-2\\\">:</span> <span class=\\\"ml-2\\\" [style.color]=\\\"'#12991f'\\\">{{rawPOIList?.activeCount ? rawPOIList?.activeCount : 0}}</span></span>\\n                  <span class=\\\"dataLastChild\\\" [style.direction]=\\\"langDirection\\\">{{langObj?.inactive}} <span class=\\\"ml-2\\\">:</span> <span class=\\\"ml-2\\\" [style.color]=\\\"'#fd001a'\\\">{{rawPOIList?.inActiveCount ? rawPOIList?.inActiveCount : 0}}</span></span>\\n                </div>\\n              </app-floating-btn>\\n            </div> -->\\n          <!-- <div class=\\\"floorLegend\\\" *ngIf=\\\"isShowBuilder\\\">\\n              <div class=\\\"mb-12\\\">\\n                <label class=\\\"mr-8\\\"> To Add POI</label>\\n                <span>Shift+Click</span>\\n              </div>\\n              <div>\\n                <label  class=\\\"mr-8 ml-12\\\">To Delete POI/Path</label>\\n                <span>Shift+Delete</span>\\n              </div>\\n            </div> -->\\n        </div>\\n      </div>\\n    </mat-drawer-content>\\n  </mat-drawer-container>\\n</div>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PropertyViewGraphicComponent } from './property-view-graphic.component';\n\n\nexport const routes: Routes = [\n  { path: '', component: PropertyViewGraphicComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PropertyViewGraphicRoutingModule { }\n\n","export default \"app-property-view-graphic {\\n  display: flex;\\n  flex: 1 1 auto;\\n}\\napp-property-view-graphic .mat-drawer-container .mat-drawer {\\n  max-width: 480px !important;\\n  width: 480px !important;\\n}\\napp-property-view-graphic .mat-drawer-container .mat-drawer .helpdesk-filter-drawer {\\n  padding: 30px 25px 30px 25px;\\n}\\napp-property-view-graphic .mat-drawer-container .mat-drawer .helpdesk-filter-drawer .title {\\n  display: flex;\\n  margin: 0 0 30px 0;\\n}\\napp-property-view-graphic .mat-drawer-container .mat-drawer .helpdesk-filter-drawer .title h4 {\\n  padding: 10px 0 0 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9hbXMvbXktcHJvcGVydHkvcHJvcGVydHktdmlldy1ncmFwaGljL3Byb3BlcnR5LXZpZXctZ3JhcGhpYy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxjQUFBO0FBQ0o7QUFBSTtFQUNJLDJCQUFBO0VBQ0EsdUJBQUE7QUFFUjtBQURRO0VBQ0ksNEJBQUE7QUFHWjtBQUZZO0VBQ0ksYUFBQTtFQUNBLGtCQUFBO0FBSWhCO0FBSGdCO0VBQ0ksOEJBQUE7QUFLcEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Ftcy9teS1wcm9wZXJ0eS9wcm9wZXJ0eS12aWV3LWdyYXBoaWMvcHJvcGVydHktdmlldy1ncmFwaGljLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYXBwLXByb3BlcnR5LXZpZXctZ3JhcGhpYyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgICAubWF0LWRyYXdlci1jb250YWluZXIgLm1hdC1kcmF3ZXIge1xuICAgICAgICBtYXgtd2lkdGg6IDQ4MHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIHdpZHRoOiA0ODBweCAhaW1wb3J0YW50O1xuICAgICAgICAuaGVscGRlc2stZmlsdGVyLWRyYXdlciB7XG4gICAgICAgICAgICBwYWRkaW5nOiAzMHB4IDI1cHggMzBweCAyNXB4O1xuICAgICAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMCAwIDMwcHggMDtcbiAgICAgICAgICAgICAgICBoNCB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMCAwIDAgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbiJdfQ== */\";","import { Component, OnInit, ViewChild, ElementRef, HostListener, ViewEncapsulation } from '@angular/core';\nimport { ApartmentService } from 'src/app/api/controllers/Apartment';\nimport { DocumentService } from 'src/app/api/controllers/Document';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FileUploadService } from 'src/app/shared/services/file-upload.service';\nimport { FileDownloadService } from 'src/app/shared/services/file-download.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { LookupService } from 'src/app/api/controllers/Lookup';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FileDetailsService } from 'src/app/api/controllers/FileDetails';\nimport { AddPropertyDialogComponent } from 'src/app/modules/ams/profile-settings/components/add-property-dialog/add-property-dialog.component';\nimport { SessionService } from 'src/app/core/session/session.service';\nimport { PropertyManagerService } from 'src/app/api/controllers/PropertyManager';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { SharedService } from 'src/app/shared/services/shared.service';\ndeclare var d3: any;\ndeclare var GraphCreator: any;\nvar graph;\n\n@Component({\n  selector: 'app-property-view-graphic',\n  templateUrl: './property-view-graphic.component.html',\n  styleUrls: ['./property-view-graphic.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PropertyViewGraphicComponent implements OnInit {\n\n  loading: boolean = true;\n  isShowBuilder: boolean = false;\n  savePFNode: any;\n  bNo: any = 0;\n  fNo: any = 0;\n  public towerList: Array<any> = [];\n  public floorList: Array<any> = [];\n  public floorPropertyData: any;\n  public updatedGraph: any;\n  public selectedTower: any;\n  public selectedFloor: any;\n  public selectedFloorLabel: any;\n  public selectedFloorNo: any;\n  public uploadResponse: any;\n  public onChangeVal: any;\n  public currentPOIId: any;\n  public propertyTypeList: Array<any> = [];\n  public unitFilterList: Array<any> = [];\n  public selectedUnitFilterValue: any;\n  public selectedPropertyType: any;\n  public styleTop: any;\n  public styleLeft: any;\n  public isShowOver = 'none';\n  public floorMapJson: any;\n  @ViewChild('poiId') poiId: ElementRef;\n  @ViewChild('nodeId') nodeId: ElementRef;\n  @ViewChild('nodeKind') nodeKind: ElementRef;\n  @ViewChild('type') Nodetype: ElementRef;\n  @ViewChild('matDrawer', { static: true }) matDrawer: MatDrawer;\n  constructor(private element: ElementRef,\n    private apartmentService: ApartmentService,\n    private sharedService: SharedService,\n    private cookieService: CookieService,\n    private fileUploadService: FileUploadService,\n    private fileDownloadService: FileDownloadService,\n    private sanitizer: DomSanitizer,\n    private lookupService: LookupService,\n    private propertyManagerService: PropertyManagerService,\n    public dialog: MatDialog,\n    private sessionService: SessionService,\n    private fileDetailService: FileDetailsService) {\n    localStorage.setItem('preventGraph', 'true');\n  }\n\n  ngOnInit(): void {\n    this.getBlockList();\n    this.getPropertyType();\n    this.unitFilterList = [\n      {\n        id: 'isAvailableForRent',\n        name: \"Available For Rent\"\n      },\n      {\n        id: 'isPetsAllowed',\n        name: \"Pets Allowed\"\n      },\n      {\n        id: 'isFurnished',\n        name: \"Furnished\"\n      },\n      {\n        id: 'isVacant',\n        name: \"Vacant\"\n      },\n      {\n        id: 'isSold',\n        name: \"Sold\"\n      },\n      {\n        id: 'constructionInProgress',\n        name: \"Construction In Progress\"\n      },\n      {\n        id: 'twoBR',\n        name: \"2 BR\"\n      }\n    ]\n  }\n    \n  ngAfterViewInit(){\n    this.bootMe();\n  }\n\n\n  selectPropertyType(e) {\n    this.selectedPropertyType = e[0].lookupValueId;\n    switch (Number(this.selectedPropertyType)) {\n      case 318:\n        this.getUnitProperty();\n        break;\n      case 319:\n        this.getAssetProperty();\n        break;\n      case 320:\n        this.getFacilityProperty();\n        break;\n      case 321:\n        this.getMaintananceProperty();\n        break;\n      default:\n        break;\n    }\n  }\n\n  getUnitProperty() {\n    let getParam = {\n      apartmentId: this.sessionService.apartmentId,\n      propertyPOIType: this.selectedPropertyType\n    }\n    this.propertyManagerService.getAllPropertyPoiUnitByPropertyPoiType(getParam).subscribe(\n      resp => {\n\n      }\n    )\n  }\n\n  getAssetProperty() {\n    let getParam = {\n      apartmentId: this.sessionService.apartmentId,\n      propertyPOIType: this.selectedPropertyType\n    }\n    this.propertyManagerService.getAllPropertyPoiAssetByPropertyPoiType(getParam).subscribe(\n      resp => {\n\n      }\n    )\n  }\n\n  getFacilityProperty() {\n    let getParam = {\n      apartmentId: this.sessionService.apartmentId,\n      propertyPOIType: this.selectedPropertyType\n    }\n    this.propertyManagerService.getAllPropertyPoiFacilityByPropertyPoiType(getParam).subscribe(\n      resp => {\n\n      }\n    )\n  }\n\n  getMaintananceProperty() {\n    let getParam = {\n      apartmentId: this.sessionService.apartmentId,\n      propertyPOIType: this.selectedPropertyType\n    }\n    this.propertyManagerService.getAllPropertyPoiOpMaintenanceByPropertyPoiType(getParam).subscribe(\n      resp => {\n\n      }\n    )\n  }\n\n  getBlockList() {\n    let param = {\n      apartmentId: this.sessionService.apartmentId\n    }\n    this.apartmentService.getApartmentBlockByApartmentId(param).subscribe(\n      (resp: any) => {\n        this.towerList = resp;\n        this.selectedTower = this.towerList[0].apartmentBlockId;\n        this.getFloorList(undefined);\n      },\n      error => {\n\n      }\n    )\n  }\n\n  getFloorList(e) {\n    if (e) {\n      this.selectedTower = e[0].apartmentBlockId;\n    }\n    let getFloorParam = {\n      apartmentId: this.sessionService.apartmentId,\n      apartmentblockId: this.selectedTower\n    }\n    this.apartmentService.getApartmentBlockFloorByApartmentIdBlockId(getFloorParam).subscribe(\n      (resp: any) => {\n        if (resp && resp.length) {\n          this.floorList = resp;\n          this.selectedFloor = this.floorList[0].apartmentBlockFloorId;\n          this.selectFloor(undefined);\n          // this.getPropertyMap(this.floorList[0].propertyMapFileId);\n        }\n      },\n      error => {\n\n      }\n    )\n  }\n\n  selectFloor(e) {\n    if (e) {\n      this.selectedFloor = e[0].apartmentBlockFloorId;\n    }\n    if (this.selectedFloor) {\n      this.floorList.filter(key => {\n        if (key.apartmentBlockFloorId == this.selectedFloor) {\n          this.selectedFloorLabel = key.floorLabel;\n          this.selectedFloorNo = key.floorno;\n          this.getPropertyMap(key.propertyMapFileId);\n        }\n      })\n    }\n  }\n\n\n  getPropertyType() {\n    let getLookUpParam = {\n      ApartmentId: this.sessionService.apartmentId,\n      LookupTypeId: 196\n    }\n    this.lookupService.getLookupValueByLookupTypeId(getLookUpParam).subscribe(\n      (resp: any) => {\n        this.propertyTypeList = resp;\n      },\n      error => {\n\n      }\n    )\n  }\n\n  addProperty(type): void {\n    let data: any = this.onChangeVal;\n    data['type'] = type;\n    data['apartmentBlockId'] = this.selectedFloor;\n    const dialogRef = this.dialog.open(AddPropertyDialogComponent, {\n      width: '20%',\n      position: {\n        right: '10%'\n      },\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        let objectVal: Array<string> = [];\n        for (const key in result) {\n          objectVal.push(key)\n        }\n        objectVal.splice(0, 2);\n        // let arrObjVal = JSON.stringify(objectVal);\n        $('#nodeKind').val(objectVal.toString());\n        $('#spanNode').val(this.onChangeVal.nodeId);\n        $('#poiId').val(result.poiId);\n        $('#type').val(result.type);\n        this.updatePOI();\n      }\n    });\n  }\n\n\n  getPropertyMap(propertyId) {\n    let getFloorProperty = {\n      propertyMapFileId: propertyId\n    }\n    this.apartmentService.getPropertyMapFileById(getFloorProperty).subscribe(\n      (resp: any) => {\n        if (resp && resp.length) {\n          this.floorPropertyData = resp[0];\n          this.assignData(this.floorPropertyData)\n        }\n      },\n      error => {\n\n      }\n    )\n  }\n\n  assignData(data) {\n    if (data && data.floorPictureFileDetailsId && data.floorPictureFileDetailsId != 0 && data.mapJsonFile != \"\") {\n      this.isShowBuilder = true;\n      setTimeout(() => {\n        this.removeD3Elements();\n        graph.deleteGraph();\n        this.getFileDetails(data.floorPictureFileDetailsId);\n        graph.customGraphUpdate(data.mapJsonFile, undefined);\n        this.floorMapJson = data.mapJsonFile;\n      }, 1)\n    } else if (data && data.floorPictureFileDetailsId && data.floorPictureFileDetailsId != 0) {\n      this.isShowBuilder = true;\n      setTimeout(() => {\n        this.removeD3Elements();\n        this.getFileDetails(data.floorPictureFileDetailsId);\n        // graph.customImageUpdalod(this.getImage(data.floorPictureFileDetailsId));\n      }, 1)\n    } else {\n      this.isShowBuilder = false;\n    }\n  }\n\n  getFileDetails(imageId) {\n    let newParams = {\n      fileDetailsId: imageId,\n      apartmentId: this.sessionService.apartmentId\n    }\n\n    this.fileDetailService.getFileDetailsById(newParams).subscribe((res: any) => {\n      this.downloadFile(res[0].filePath)\n    })\n  }\n\n  downloadFile(filePath) {\n    this.fileDownloadService.downloadFile(filePath).subscribe((res: any) => {\n      const blob = res.body\n      let objectURL = URL.createObjectURL(blob);\n      let sanitizeUrl: any = this.sanitizer.bypassSecurityTrustUrl(objectURL);\n      graph.customImageUpdalod(sanitizeUrl.changingThisBreaksApplicationSecurity);\n    })\n\n  }\n\n  getImage(floorPictureFileDetailsId) {\n    let downloadParam = {\n      fileNameOnBlob: floorPictureFileDetailsId,\n      savefileNameWithPath: ''\n    }\n    this.fileDetailService.downloadAsync(downloadParam).subscribe(\n      resp => {\n        return resp;\n      },\n      error => {\n\n      }\n    )\n  }\n\n  bootMe() {\n    let docEl = document.documentElement,\n      bodyEl = document.getElementsByTagName('body')[0];\n\n    let width = window.innerWidth || docEl.clientWidth || bodyEl.clientWidth,\n      height = window.innerHeight || docEl.clientHeight || bodyEl.clientHeight;\n    // initial node data\n    var nodes = [];\n    var edges = [];\n    /** MAIN SVG **/\n    var svg = d3.select(\"#lcanvas\").append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    graph = new GraphCreator(svg, nodes, edges);\n    graph.setIdCt(0);\n    // this.graph.updateGraph();\n  }\n\n  addPropertyMap(imageId) {\n    this.downloadGraph();\n    let addPropertyMap = {\n      propertyMapFile: {\n        \"propertyMapFileId\": 0,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentBlockId\": this.selectedTower,\n        \"description\": \"\",\n        \"isIndoor\": true,\n        \"floorno\": this.selectedFloorNo,\n        \"floorLabel\": this.selectedFloorLabel,\n        \"floorPictureFileDetailsId\": imageId,\n        \"mapJsonFile\": JSON.stringify(this.updatedGraph),\n        \"isActive\": true,\n        \"insertedBy\": parseInt(this.cookieService.get('userId')),\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": 0,\n        \"updatedOn\": new Date().toISOString(),\n        \"apartmentBlockFloorId\": this.selectedFloor\n      }\n    }\n    this.apartmentService.addPropertyMapFile(addPropertyMap).subscribe(\n      (resp: any) => {\n        this.floorPropertyData = resp;\n        this.assignData(this.floorPropertyData)\n      },\n      error => {\n\n      }\n    )\n  }\n\n  updateProperty() {\n    this.downloadGraph();\n    let updatePropertyMap = {\n      propertyMapFile: {\n        \"propertyMapFileId\": this.floorPropertyData.propertyMapFileId,\n        \"apartmentId\": this.sessionService.apartmentId,\n        \"apartmentBlockId\": this.selectedFloor,\n        \"description\": \"\",\n        \"isIndoor\": true,\n        \"floorno\": this.selectedFloorNo,\n        \"floorLabel\": this.selectedFloorLabel,\n        \"floorPictureFileDetailsId\": this.floorPropertyData.floorPictureFileDetailsId,\n        \"mapJsonFile\": JSON.stringify(this.updatedGraph),\n        \"isActive\": true,\n        \"insertedBy\": 0,\n        \"insertedOn\": new Date().toISOString(),\n        \"updatedBy\": parseInt(this.cookieService.get('userId')),\n        \"updatedOn\": new Date().toISOString(),\n        \"apartmentBlockFloorId\": this.selectedTower\n      }\n    }\n    this.apartmentService.updatePropertyMapFile(updatePropertyMap).subscribe(\n      (resp: any) => {\n        this.floorPropertyData = resp;\n        // this.assignData(this.floorPropertyData)\n      },\n      error => {\n\n      }\n    )\n  }\n\n  downloadGraph() {\n    var savePFNodes = [];\n    var saveEdges = [];\n    var savePFEdges = [];\n\n    var prefix = this.bNo + \"_\" + this.fNo + \"_\";\n    var sid, tid;\n    var nobj;\n    this.savePFNode = [];\n    graph.nodes.forEach(function (val, i) {\n      nobj = {}\n      nobj.id = prefix + val.id\n      nobj.x = val.x\n      nobj.y = val.y\n      nobj.poiId = val.poiId\n      nobj.kind = val.kind\n      savePFNodes.push(nobj)\n    });\n    this.savePFNode = savePFNodes;\n    graph.edges.forEach(function (val, i) {\n      saveEdges.push({ source: val.source.id, target: val.target.id });\n      sid = prefix + val.source.id;\n      tid = prefix + val.target.id;\n      savePFEdges.push({ source: sid, target: tid });\n    });\n    var fullObj = {\n      maponly: {\n        idct: graph.idct,\n        buildingNo: this.bNo,\n        floorNo: this.fNo,\n        nodes: graph.nodes,\n        edges: saveEdges\n      }, output: {\n        floorNo: this.fNo,\n        nodes: savePFNodes,\n        edges: savePFEdges\n      }\n    };\n    this.updatedGraph = fullObj;\n    /*fullObj.maponly.idct = graph.idct\n    fullObj.maponly.buildingNo = this.bNo\n    fullObj.maponly.floorNo = this.fNo\n    fullObj.maponly.nodes = graph.nodes\n    fullObj.maponly.edges = saveEdges\n    fullObj.output.floorNo = this.fNo\n    fullObj.output.nodes = savePFNodes\n    fullObj.output.edges = savePFEdges*/\n\n    // var blob = new Blob([JSON.stringify(fullObj)], {type: \"text/plain;charset=utf-8\"});\n    // //for time being commented out\n    // saveAs(blob, \"mydag.json\");\n  }\n\n  selectedUnitFilter(e) {\n    this.selectedUnitFilterValue = e[0].id;\n    let selectedObj = { type: this.selectedPropertyType, selectedCategory: this.selectedUnitFilterValue }\n    graph.customGraphUpdate(this.floorPropertyData.mapJsonFile, selectedObj);\n  }\n\n  updatePOI() {\n    if ($('#poiId').val() && $('#nodeKind').val() && $('#spanNode').val()) {\n      graph.setPOIId();\n      this.updateProperty();\n    }\n  }\n\n  browseFile() {\n    var fileUpload = $(this.element.nativeElement).find(\"input[id='hidden-bg-upload']\");\n    fileUpload.trigger(\"click\");\n  }\n\n\n  ngOnDestroy() {\n    this.removeD3Elements();\n    graph.deleteGraph();\n    localStorage.removeItem('preventGraph');\n  }\n\n  removeD3Elements(){\n    d3.select(\"#bgimage\").remove();\n    d3.select(\"#smart-path\").remove();\n    d3.select(\"#smart-path-navigation\").remove();\n  }\n\n  goBack() {\n    this.matDrawer.close();\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { routes } from './property-view-graphic-routing.module';\nimport { PropertyViewGraphicRoutingModule } from './property-view-graphic-routing.module';\n\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { SelectModule } from 'src/app/modules/ui/select/select.module';\n\nimport { PropertyViewGraphicComponent } from './property-view-graphic.component';\n\n\n@NgModule({\n  declarations: [ PropertyViewGraphicComponent ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    SelectModule,\n    RouterModule.forChild(routes),\n    PropertyViewGraphicRoutingModule\n    ],\n  bootstrap: [\n    PropertyViewGraphicComponent\n  ]\n})\nexport class PropertyViewGraphicModule { }\n"]}